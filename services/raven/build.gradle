import org.gradle.api.tasks.testing.Test

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.graalvm.buildtools.native' version '0.10.6'
    id 'com.gradleup.shadow' version '8.3.6'
}

group = 'com.paxkun'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

springBoot {
    mainClass = 'com.paxkun.raven.RavenApplication'
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // ───── Spring Boot ─────
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // ───── VaultService: JSON (Gson) ─────
    implementation 'com.google.code.gson:gson:2.11.0'

    // ───── Lombok ─────
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ───── Utilities ─────
    implementation 'org.jetbrains:annotations:26.0.2'
    implementation 'org.jsoup:jsoup:1.17.2'
    implementation 'commons-io:commons-io:2.15.1'
    implementation 'org.apache.commons:commons-lang3:3.18.0'
    implementation 'com.google.guava:guava:33.2.0-jre'

    // ───── Selenium & WebDriverManager ─────
    implementation 'org.seleniumhq.selenium:selenium-java:4.16.1'
    implementation 'io.github.bonigarcia:webdrivermanager:6.1.0'

    // ───── Development Only ─────
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // ───── Testing ─────
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

tasks.named('shadowJar') {
    archiveClassifier.set('all')
    mergeServiceFiles()
    manifest {
        attributes('Main-Class': springBoot.mainClass)
    }
}

tasks.named('build') {
    dependsOn tasks.named('shadowJar')4
}
